name: Create Full Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0.0, v1.2.3, etc.

jobs:
  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Make build script executable
        run: chmod +x ./build-and-push.sh

      - name: Build and push Docker images
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: ./build-and-push.sh ${{ env.VERSION }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This is the official release for version ${{ github.ref }}.
            See the attached assets for different installation options.
          draft: false
          prerelease: false

  build-installers:
    name: Build Installer for ${{ matrix.os }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            asset_name_suffix: .exe
            asset_content_type: application/vnd.microsoft.portable-executable
          - os: macos-latest
            asset_name_suffix: .dmg
            asset_content_type: application/x-apple-diskimage
          - os: ubuntu-latest
            asset_name_suffix: .AppImage
            asset_content_type: application/vnd.appimage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: pip install -r backend/requirements.in && pip install -r backend/requirements-dev.in

      - name: Make build script executable
        run: chmod +x ./scripts/build-desktop.sh

      - name: Run build script
        run: ./scripts/build-desktop.sh
        shell: bash

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./frontend/release/ArthSaarthi-${{ env.VERSION }}${{ matrix.asset_name_suffix }}
          asset_name: ArthSaarthi-${{ env.VERSION }}-${{ matrix.os }}${{ matrix.asset_name_suffix }}
          asset_content_type: ${{ matrix.asset_content_type }}

"""Add fixed income tables

Revision ID: 2a1b3c4d5e6f
Revises: b9a8d7c6e5f4
Create Date: 2025-09-02 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.db.custom_types import GUID


# revision identifiers, used by Alembic.
revision: str = '2a1b3c4d5e6f'
down_revision: Union[str, None] = 'b9a8d7c6e5f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fixed_deposits',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('asset_id', GUID(), nullable=False),
    sa.Column('institution_name', sa.String(), nullable=False),
    sa.Column('account_number', sa.String(), nullable=True),
    sa.Column('principal_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('maturity_date', sa.Date(), nullable=False),
    sa.Column('payout_type', sa.Enum('REINVESTMENT', 'PAYOUT', name='payout_type_enum'), nullable=False),
    sa.Column('compounding_frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'HALF_YEARLY', 'ANNUALLY', 'AT_MATURITY', name='compounding_frequency_enum'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id')
    )
    op.create_table('public_provident_funds',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('asset_id', GUID(), nullable=False),
    sa.Column('institution_name', sa.String(), nullable=False),
    sa.Column('account_number', sa.String(), nullable=True),
    sa.Column('opening_date', sa.Date(), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id')
    )
    op.create_table('bonds',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('asset_id', GUID(), nullable=False),
    sa.Column('bond_name', sa.String(), nullable=False),
    sa.Column('isin', sa.String(), nullable=True),
    sa.Column('face_value', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('coupon_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('purchase_price', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=False),
    sa.Column('maturity_date', sa.Date(), nullable=False),
    sa.Column('interest_payout_frequency', sa.Enum('ANNUALLY', 'SEMI_ANNUALLY', name='interest_payout_frequency_enum'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bonds')
    op.drop_table('public_provident_funds')
    op.drop_table('fixed_deposits')
    op.execute("DROP TYPE interest_payout_frequency_enum;")
    op.execute("DROP TYPE compounding_frequency_enum;")
    op.execute("DROP TYPE payout_type_enum;")
    # ### end Alembic commands ###
